377. Combination Sum IV

给定一个无重复元素的正整数数组，求所有可能的排列数，使得元素之和为目标元素。
元素可以重复利用。

分析：
1
1

2
1,1
2

3
1,1,1
1,2
2,1
3

4
1,1,1,1
1,1,2
1,2,1
2,1,1
1,3
2,2
3,1

5
1,1,1,1,1
1,1,1,2
1,1,2,1
1,2,1,1
2,1,1,1
1,1,3
1,3,1
3,1,1
1,2,2
2,1,2
2,2,1
2,3
3,2

可以看出规律，f[t] = sum(f[t-s[i]]), i from s.begin() to s.end()

小结：
一开始我也做出了最终的判断，可是思路没想清楚，觉得这是错的，就放弃了这个想法。而且中间推的时候也推错了。一开始没注意到是排列数，以为是组合数。注意到是排列数时，就放弃了一开始的想法。


代码：
class Solution {
private:
    vector<int> dp;
public:
    int combinationSum4(vector<int> &nums, int target) {
        dp = vector<int>(target+1, 0);
        dp[0] = 1;
        sort(nums.begin(), nums.end());
        for (int i = 1; i <= target; ++i) {
            for (int j = 0; j < nums.size(); ++j) {
            	if (nums[i] > i) break;
                dp[i] += dp[i-nums[j]];
            }
        }
        return dp[target];
    }
};