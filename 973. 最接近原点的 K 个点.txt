973. 最接近原点的 K 个点

我们有一个由平面上的点组成的列表 points。需要从中找出 K 个距离原点 (0, 0) 最近的点。

（这里，平面上两点之间的距离是欧几里德距离。）

你可以按任何顺序返回答案。除了点坐标的顺序之外，答案确保是唯一的。


思路：
堆


# java

class Solution {
    private PriorityQueue<Point> q = new PriorityQueue<>();
    private int size;
    public int[][] kClosest(int[][] points, int K) {
        size = K;
        q = new PriorityQueue<>(new Comparator<Point>(){
            public int compare(Point p1, Point p2) {
                return (p2.x*p2.x+p2.y*p2.y) - (p1.x*p1.x+p1.y*p1.y);
            }
        });
        for (int i = 0; i < points.length; ++i) {
            addEle(new Point(points[i][0], points[i][1]));
        }
        int[][] res = new int[K][2];
        for (int i = 0; i < K; ++i) {
            Point p = q.peek();
            q.remove();
            res[i][0] = p.x;
            res[i][1] = p.y;
        }
        return res;
    }
    private void addEle(Point point) {
        if (q.size() < size) {
            q.add(point);
        } else {
            if (count(q.peek()) > count(point)) {
                q.remove();
                q.add(point);
            }
        }
    }
    private int count(Point p) {
        return p.x*p.x + p.y*p.y;
    }
    class Point {
        public int x;
        public int y;
        Point(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }
}